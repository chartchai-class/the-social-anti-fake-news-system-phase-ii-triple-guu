name: Build Backend & Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build backend JAR
        working-directory: finalproject
        run: mvn -q -B -DskipTests clean package

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & push se331-backend
        uses: docker/build-push-action@v6
        with:
          context: ./finalproject
          file: ./finalproject/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/se331-backend:latest

      - name: Verify SSH to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "✅ Connected OK"
            uname -a
            mkdir -p ~/backend

      - name: Copy compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "./finalproject/docker-compose-prod.yml"
          target: "/home/ubuntu/backend"
          overwrite: true

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            cd ~/backend

            SRC=""
            if [ -f docker-compose-prod.yml ]; then
              SRC=docker-compose-prod.yml
            elif [ -f finalproject/docker-compose-prod.yml ]; then
              SRC=finalproject/docker-compose-prod.yml
            else
              echo "❌ docker-compose-prod.yml not found. Current tree:"
              ls -R
              exit 1
            fi

            mv -f "$SRC" docker-compose.yml

            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            export DOCKER_HUB_USERNAME="${{ secrets.DOCKER_HUB_USERNAME }}"

            docker compose pull
            docker compose up -d
            docker compose ps
