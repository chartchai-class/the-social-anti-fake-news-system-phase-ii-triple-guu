name: Deploy to AWS Docker on merge prod

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build backend with Maven (finalproject)
        working-directory: finalproject
        run: |
          mvn clean install -DskipTests -B
          mkdir -p target/dependency && (cd target/dependency; unzip ../*.jar)

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./finalproject
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/se331-backend:latest

      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose-prod.yml"
          target: "/home/ubuntu/backend"
          overwrite: true

      - name: Deploy with docker compose on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            cd /home/ubuntu/backend
            mv docker-compose-prod.yml docker-compose.yml
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            docker compose down
            docker compose pull
            docker compose up -d
